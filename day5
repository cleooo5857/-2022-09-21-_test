강화 for문, 함수, 지역변수, 전역변수, dom selector

---------------------------------------------------------------------------------------------------------------------

for문 ? (반복문)

1) for in
2) forEach
3) for of

---------------------------------------------------------------------------------------------------------------------

함수( function )
    하나의 특별한 작업(기능)을 수행하도록 설계된 독립적인 영역

    ex)
        function 함수명(매개변수1,매개변수2,...){
            ...매개변수를 활용하여 실행할 기능
        }

    // 정의
    function sum(a,b){
        return a+b
    }

    //실행 함수명();
    sum(num2,num2)
    sum(num3,num4)


    // 정의
    function printSum(a,b){
        console.log(a+b)
    }

    //실행
    printSum(num2,num3)

--------------------------------------------------------------------------------------------------------------
    
    함수 안에서 return => 값을 반환 (함수 내 기능을 실행한게 결과 값으로 나온다)
    따라서 반환 값을 저장하여 밖에서 활용할 수 있다.

    만약 return을 사용하지 않는다면 일종의 기능만 실행

--------------------------------------------------------------------------------------------------------------

        매개변수

        a와 b는 함수를 실행할 때 함수의 인자(num2,num2)를 전달받아(매개체) 사용할 수 있게한다.
        따라서 함수 sum의 매개변수는 a와 b이다.

--------------------------------------------------------------------------------------------------------------

    지역변수 , 전역변수
        자바스크립트의 변수에는 개체, 함수, 값이 모두 담길 수 있습니다.
        변수의 봄유ㅏ눈 햐덩 뵨슈애 좁군헐 슈 았눈 용욕


    1. 지역변수
        함수(범위,블럭) 내에서 선언
        해당 범위 블럭 안에서만 사용 가능, 그 영역을 벗어나면 메모리에서 사라진다
        => 자바스크립트 실행 컨텍스트(환경)에서 "스코프" 
        ex:)) 면접 볼떄 스코프 공부

    2. 전역변수
        특정 블럭 외부에서 사용된 전체 블럭에서 선언 및 사용하는 변수
        전역 변수는 프로그램의 어느 영역에서나 접근 할 수 있으며 웹페이지가 닫혀야만
        메모리에서 삭제

--------------------------------------------------------------------------------------------------------------

    DOM (문서 객체 모델: document object model)
        XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스
        문서 내의 모든 요소를 정의하고 각 요소에 접근하는 방법들을 제공

        DOM TREE

            html 파싱과정
            google.com 검색했을 때 일어나는 일?
--------------------------------------------------------------------------------------------------------------

    document 객체

    웹 페이지 자체를 의미
    웹 페이지에 존재하는 모든 HTML 요소에 접근할 수 있도록 함

--------------------------------------------------------------------------------------------------------------
    
    DOM selector 
        다양한 html 요소 중 내가 선택하고자 하는 요소에 접근할 수 있도록 하는 document 객체의 함수
        => dom에 접근하기 위해서는 document라는 객체로 시작

--------------------------------------------------------------------------------------------------------------

    1. document.getElementById()
    ()안의 아이디를 가지고 있는 요소를 선택해서 가져옴

    * id는 몇 개? => 1개, 단일 객체 반환

    ex) 
        <div id="baneer"></div>
        document.getElementById("banner"); // => <div id="banner"></div>

        해석 => dom의 접근, 아이디를 가지고 있는 요소 가져오는 구나..., banner라는

    2. document.getElementByClassname()
        ()안의 클래스를 가지고 있는 요소를 모두 선택해서 가져옴
        * class는 몇 개일까요? => 복수 객체를 반환 -> 배열

        ex)
            <div class="menu"></div>
            ... * n개

            const MENU_DOM = document.getElementByClassname("menu")

            for(let i=0 i < menu_dom.length[갯수]; i++){
                ..MENU_DOM[i] -->
            }
--------------------------------------------------------------------------------------------------------------
다음주
- dom selector 마무리 + css 변경 + 값 추출 (체크박스 , 라디오박스, ...)
+ 외부라이브러리(aos) + 배포

--------------------------------------------------------------------------------------------------------------
마지막 주는 javascript 심화 해쉬맵, 알고리즘,자료구조, 콜백, async,await